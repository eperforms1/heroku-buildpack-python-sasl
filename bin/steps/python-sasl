# Install python-ldap
puts-step "Installing sasl"

# GROFF_VERSION=1.21
# GROFF_URL=ftp://ftp.gnu.org/gnu/groff/groff-${GROFF_VERSION}.tar.gz

# BERKLEY_DB_VERSION=5.3.15
# BERKLEY_DB_URL=http://download.oracle.com/berkeley-db/db-${BERKLEY_DB_VERSION}.NC.tar.gz

# OPENLDAP_VERSION=2.4.40
# OPENLDAP_URL=http://www.openldap.org/software/download/OpenLDAP/openldap-release/openldap-${OPENLDAP_VERSION}.tgz

SASL_VERSION=0.2.1
SASL_URL="https://pypi.python.org/packages/8e/2c/45dae93d666aea8492678499e0999269b4e55f1829b1e4de5b8204706ad9/sasl-${SASL_VERSION}.tar.gz#md5=ca093d9a3d6f20b79b964a5e5add0202"
# curl -s -L -o sasl-0.2.1.tar.gz "https://pypi.python.org/packages/8e/2c/45dae93d666aea8492678499e0999269b4e55f1829b1e4de5b8204706ad9/sasl-0.2.1.tar.gz#md5=ca093d9a3d6f20b79b964a5e5add0202"
# SASL_DIR = sasl-$SASL_VERSION

mkdir -p $CACHE_DIR/.python-sasl
mkdir -p $BUILD_DIR/.python-sasl

if [ ! -d $CACHE_DIR/.python-sasl/sasl ]; then
    echo "Downloading SASL ${SASL_VERSION} ..." | indent
    curl -s -L -o sasl.tar.gz $SASL_URL
    echo "Unpacking ..." | indent
    tar -zxvf sasl.tar.gz > /dev/null
    rm sasl.tar.gz
    mv sasl-${SASL_VERSION} $CACHE_DIR/.python-sasl/sasl
    ls
    mv $CACHE_DIR/.python-sasl/sasl/setup.py $CACHE_DIR/.python-sasl/sasl/setup.py.bak
    cp ./sasl-install/setup.py $CACHE_DIR/.python-sasl/sasl/setup.py
    cd $CACHE_DIR/.python-sasl/sasl
    # echo "Configuring ..." | indent
    # ./configure --prefix=$CACHE_DIR/.python-sasl/sasl > /dev/null
    echo "Compiling ..." | indent
    /app/.heroku/python/bin/python -u -c "import setuptools, tokenize;__file__='setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" install --record install-record.txt --single-version-externally-managed --compile
    # make PROCESSEDEXAMPLEFILES="" > /dev/null
    # # echo "Installing ..." | indent
    # echo "Unpacking ..." | indent
    # curl -O -L ftp://ftp.cyrusimap.org/cyrus-sasl/cyrus-sasl-2.1.26.tar.gz
    # echo "Unpacking ..." | indent
    # tar xzf cyrus-sasl-2.1.26.tar.gz
    # cd cyrus-sasl-2.1.26
    # echo "Compiling ..." | indent
    # ./configure
    # echo "Making ..." | indent
    # make install
    # # make PROCESSEDEXAMPLEFILES="" install > /dev/null
    cd - > /dev/null
fi
cp -R $CACHE_DIR/.python-sasl/sasl $BUILD_DIR/.python-sasl/sasl
export PATH=${BUILD_DIR}/.python-sasl/sasl/bin:${PATH}
echo "SASL enabled." | indent

# if [ ! -d $CACHE_DIR/.python-sasl/lib-groff ]; then
#     echo "Downloading Groff ${GROFF_VERSION} ..." | indent
#     curl -s -L -o groff.tar.gz $GROFF_URL
#     echo "Unpacking ..." | indent
#     tar -zxvf groff.tar.gz > /dev/null
#     rm groff.tar.gz
#     mv groff-${GROFF_VERSION} $CACHE_DIR/.python-sasl/groff
#     echo "Configuring ..." | indent
#     cd $CACHE_DIR/.python-sasl/groff
#     ./configure --prefix=$CACHE_DIR/.python-sasl/lib-groff > /dev/null
#     echo "Compiling ..." | indent
#     make PROCESSEDEXAMPLEFILES="" > /dev/null
#     echo "Installing ..." | indent
#     make PROCESSEDEXAMPLEFILES="" install > /dev/null
#     cd - > /dev/null
# fi
# cp -R $CACHE_DIR/.python-sasl/lib-groff $BUILD_DIR/.python-sasl/lib-groff
# export PATH=${BUILD_DIR}/.python-sasl/lib-groff/bin:${PATH}
# echo "Groff enabled." | indent


# if [ ! -d $CACHE_DIR/.python-sasl/lib-berkleydb ]; then
#     echo "Downloading BerkleyDB ${BERKLEY_DB_VERSION} ..." | indent
#     curl -s -L -o berkleydb.tar.gz $BERKLEY_DB_URL
#     echo "Unpacking ..." | indent
#     tar -zxvf berkleydb.tar.gz > /dev/null
#     rm berkleydb.tar.gz
#     mv db-${BERKLEY_DB_VERSION}.NC $CACHE_DIR/.python-sasl/berkleydb
#     echo "Configuring ..." | indent
#     cd $CACHE_DIR/.python-sasl/berkleydb/build_unix
#     ../dist/configure --prefix=$CACHE_DIR/.python-sasl/lib-berkleydb > /dev/null
#     echo "Compiling ..." | indent
#     make > /dev/null
#     echo "Installing ..." | indent
#     make install > /dev/null
#     cd - > /dev/null
# fi
# cp -R $CACHE_DIR/.python-sasl/lib-berkleydb $BUILD_DIR/.python-sasl/lib-berkleydb
# export LD_LIBRARY_PATH="$BUILD_DIR/.python-sasl/lib-berkleydb/lib:${LD_LIBRARY_PATH}"
# echo "BerkleyDB enabled." | indent


# if [ ! -d $CACHE_DIR/.python-sasl/lib-openldap ]; then
#     echo "Downloading Open LDAP ${OPENLDAP_VERSION} ..." | indent
#     curl -s -L -o openldap.tgz $OPENLDAP_URL
#     echo "Unpacking ..." | indent
#     tar -zxvf openldap.tgz > /dev/null
#     rm openldap.tgz
#     mv openldap-${OPENLDAP_VERSION} $CACHE_DIR/.python-sasl/openldap
#     echo "Configuring ..." | indent
#     cd $CACHE_DIR/.python-sasl/openldap
#     LDFLAGS="-L$BUILD_DIR/.python-sasl/lib-berkleydb/lib ${LDFLAGS}" CPPFLAGS="-I$BUILD_DIR/.python-sasl/lib-berkleydb/include ${CPPFLAGS}" ./configure --enable-bdb --enable-crypt --with-tls=openssl --prefix=$CACHE_DIR/.python-sasl/lib-openldap > /dev/null
#     echo "Compiling ..." | indent
#     make depend > /dev/null
#     make > /dev/null
#     echo "Installing ..." | indent
#     make install > /dev/null
#     cd - > /dev/null
# fi
# cp -R $CACHE_DIR/.python-sasl/lib-openldap $BUILD_DIR/.python-sasl/lib-openldap
# echo "Open LDAP enabled." | indent

# echo "Installing python-ldap ..." | indent
# PYTHON_LDAP_VERSION=`cat requirements.txt | grep python-ldap | awk -F '=' '{ print $3 }'`

# mkdir tmpdir
# if [ -n "$PYTHON_LDAP_VERSION" ]; then
#     pip install -d tmpdir python-ldap==${PYTHON_LDAP_VERSION}
# else
#     pip install -d tmpdir python-ldap
#     PYTHON_LDAP_VERSION=`ls tmpdir | grep python-ldap | sed 's/python-ldap-\(.*\)\.tar\.gz/\1/g'`
# fi

# cd tmpdir
# tar -zxvf python-ldap-${PYTHON_LDAP_VERSION}.tar.gz > /dev/null
# cd python-ldap-${PYTHON_LDAP_VERSION}
# sed "s,library_dirs = \(.*\),library_dirs = $BUILD_DIR/.python-sasl/lib-openldap/lib \1,g" setup.cfg > setup.cfg
# sed "s,include_dirs = \(.*\),include_dirs = $BUILD_DIR/.python-sasl/lib-openldap/include \1,g" setup.cfg > setup.cfg
# pip install .
# cd ../..
# rm -rf tmpdir

# apt-get install gcc-c++ python-devel.x86_64 cyrus-sasl-devel.x86_64



